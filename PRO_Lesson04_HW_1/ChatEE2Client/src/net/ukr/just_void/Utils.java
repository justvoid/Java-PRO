package net.ukr.just_void;

import java.io.IOException;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.util.Map;
import java.util.Set;

public class Utils {
    private static final String URL = "http://127.0.0.1";
    private static final int PORT = 8080;

    public static String getURL() {
        return URL + ":" + PORT;
    }

    // Generic method for sending POST requests with a lot of parameters
    public static int sendPostRequest(String urlPage, String... params) throws IOException {
        String msg = "";
        java.net.URL url = new URL(Utils.getURL() + urlPage);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setDoOutput(true);
        conn.setRequestMethod("POST");
        try (OutputStream os = conn.getOutputStream()) {
            for (int i = 0; i < params.length; i++) {
                msg += (i % 2 == 0 ? (i == 0 ? "" : "&") : "=").concat(params[i]);
            }
            os.write(msg.getBytes(StandardCharsets.UTF_8));
        }
        return conn.getResponseCode();

    }

    // Decodes and prints Error Codes generated by GroupServlet when managing Chat groups
    public static void printGroupErrorCodes(int res) {
        switch (res) {
            case 200: {
                System.out.println("User(s) added to group");
                break;
            }
            case 401: {
                System.out.println("ERROR! Incorrect login and/or password");
                break;
            }
            case 400: {
                System.out.println("ERROR! Group name is already taken by a user");
                break;
            }
            case 403: {
                System.out.println("ERROR! Must be in the group to invite");
                break;
            }
            default: {
                System.out.println("ERROR! Unknown error");
                break;
            }

        }
    }

    // Prints Map representing user online stats
    public static void printOnlineStats(Map<String, Boolean> onlineMap) {
        if (onlineMap == null) {
            System.out.println("No such username found");
        } else {
            Set<String> logins = onlineMap.keySet();
            for (String login : logins) {
                System.out.println("User: " + login + " Status: " + (onlineMap.get(login) ? "ONLINE" : "OFFLINE"));
            }
        }
    }
}
